{"ast":null,"code":"var _jsxFileName = \"/home/priyan/Downloads/FrontEnd/React/chat/src/App.js\";\nimport React from 'react';\nimport Chatkit from '@pusher/chatkit';\nimport MessageList from './components/MessageList';\nimport SendMessageForm from './components/SendMessageForm';\nimport RoomList from './components/RoomList';\nimport NewRoomForm from './components/NewRoomForm';\nimport './style.css';\nimport { tokenUrl, instanceLocator } from './config';\n\nclass App extends React.Component {\n  constructor() {\n    super();\n    this.state = {\n      roomId: null,\n      messages: [],\n      joinableRooms: [],\n      joinedRooms: []\n    };\n    this.sendMessage = this.sendMessage.bind(this);\n    this.subscribeToRoom = this.subscribeToRoom.bind(this);\n    this.getRooms = this.getRooms.bind(this);\n    this.createRoom = this.createRoom.bind(this);\n  }\n\n  componentDidMount() {\n    const chatManager = new Chatkit.ChatManager({\n      instanceLocator,\n      userId: 'perborgen',\n      tokenProvider: new Chatkit.TokenProvider({\n        url: tokenUrl\n      })\n    });\n    chatManager.connect().then(currentUser => {\n      this.currentUser = currentUser;\n      this.getRooms();\n    }).catch(err => console.log('error on connecting: ', err));\n  }\n\n  getRooms() {\n    this.currentUser.getJoinableRooms().then(joinableRooms => {\n      this.setState({\n        joinableRooms,\n        joinedRooms: this.currentUser.rooms\n      });\n    }).catch(err => console.log('error on joinableRooms: ', err));\n  }\n\n  subscribeToRoom(roomId) {\n    this.setState({\n      messages: []\n    });\n    this.currentUser.subscribeToRoom({\n      roomId: roomId,\n      hooks: {\n        onNewMessage: message => {\n          this.setState({\n            messages: [...this.state.messages, message]\n          });\n        }\n      }\n    }).then(room => {\n      this.setState({\n        roomId: room.id\n      });\n      this.getRooms();\n    }).catch(err => console.log('error on subscribing to room: ', err));\n  }\n\n  sendMessage(text) {\n    this.currentUser.sendMessage({\n      text,\n      roomId: this.state.roomId\n    });\n  }\n\n  createRoom(name) {\n    this.currentUser.createRoom({\n      name\n    }).then(room => this.subscribeToRoom(room.id)).catch(err => console.log('error with createRoom: ', err));\n  }\n\n  render() {\n    return React.createElement(\"div\", {\n      className: \"app\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 92\n      },\n      __self: this\n    }, React.createElement(RoomList, {\n      subscribeToRoom: this.subscribeToRoom,\n      rooms: [...this.state.joinableRooms, ...this.state.joinedRooms],\n      roomId: this.state.roomId,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 93\n      },\n      __self: this\n    }), React.createElement(MessageList, {\n      roomId: this.state.roomId,\n      messages: this.state.messages,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 97\n      },\n      __self: this\n    }), React.createElement(SendMessageForm, {\n      disabled: !this.state.roomId,\n      sendMessage: this.sendMessage,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 100\n      },\n      __self: this\n    }), React.createElement(NewRoomForm, {\n      createRoom: this.createRoom,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 103\n      },\n      __self: this\n    }));\n  }\n\n}\n\nexport default App;","map":{"version":3,"sources":["/home/priyan/Downloads/FrontEnd/React/chat/src/App.js"],"names":["React","Chatkit","MessageList","SendMessageForm","RoomList","NewRoomForm","tokenUrl","instanceLocator","App","Component","constructor","state","roomId","messages","joinableRooms","joinedRooms","sendMessage","bind","subscribeToRoom","getRooms","createRoom","componentDidMount","chatManager","ChatManager","userId","tokenProvider","TokenProvider","url","connect","then","currentUser","catch","err","console","log","getJoinableRooms","setState","rooms","hooks","onNewMessage","message","room","id","text","name","render"],"mappings":"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","sourcesContent":["import React from 'react'\nimport Chatkit from '@pusher/chatkit'\nimport MessageList from './components/MessageList'\nimport SendMessageForm from './components/SendMessageForm'\nimport RoomList from './components/RoomList'\nimport NewRoomForm from './components/NewRoomForm'\nimport './style.css'\nimport { tokenUrl, instanceLocator } from './config'\n\nclass App extends React.Component {\n    \n    constructor() {\n        super()\n        this.state = {\n            roomId: null,\n            messages: [],\n            joinableRooms: [],\n            joinedRooms: []\n        }\n        this.sendMessage = this.sendMessage.bind(this)\n        this.subscribeToRoom = this.subscribeToRoom.bind(this)\n        this.getRooms = this.getRooms.bind(this)\n        this.createRoom = this.createRoom.bind(this)\n    } \n    \n    componentDidMount() {\n        const chatManager = new Chatkit.ChatManager({\n            instanceLocator,\n            userId: 'perborgen',\n            tokenProvider: new Chatkit.TokenProvider({\n                url: tokenUrl\n            })\n        })\n        \n        chatManager.connect()\n        .then(currentUser => {\n            this.currentUser = currentUser\n            this.getRooms()\n        })\n        .catch(err => console.log('error on connecting: ', err))\n    }\n    \n    getRooms() {\n        this.currentUser.getJoinableRooms()\n        .then(joinableRooms => {\n            this.setState({\n                joinableRooms,\n                joinedRooms: this.currentUser.rooms\n            })\n        })\n        .catch(err => console.log('error on joinableRooms: ', err))\n    }\n    \n    subscribeToRoom(roomId) {\n        this.setState({ messages: [] })\n        this.currentUser.subscribeToRoom({\n            roomId: roomId,\n            hooks: {\n                onNewMessage: message => {\n                    this.setState({\n                        messages: [...this.state.messages, message]\n                    })\n                }\n            }\n        })\n        .then(room => {\n            this.setState({\n                roomId: room.id\n            })\n            this.getRooms()\n        })\n        .catch(err => console.log('error on subscribing to room: ', err))\n    }\n    \n    sendMessage(text) {\n        this.currentUser.sendMessage({\n            text,\n            roomId: this.state.roomId\n        })\n    }\n    \n    createRoom(name) {\n        this.currentUser.createRoom({\n            name\n        })\n        .then(room => this.subscribeToRoom(room.id))\n        .catch(err => console.log('error with createRoom: ', err))\n    }\n    \n    render() {\n        return (\n            <div className=\"app\">\n                <RoomList\n                    subscribeToRoom={this.subscribeToRoom}\n                    rooms={[...this.state.joinableRooms, ...this.state.joinedRooms]}\n                    roomId={this.state.roomId} />\n                <MessageList \n                    roomId={this.state.roomId}\n                    messages={this.state.messages} />\n                <SendMessageForm\n                    disabled={!this.state.roomId}\n                    sendMessage={this.sendMessage} />\n                <NewRoomForm createRoom={this.createRoom} />\n            </div>\n        );\n    }\n}\n\nexport default App"]},"metadata":{},"sourceType":"module"}